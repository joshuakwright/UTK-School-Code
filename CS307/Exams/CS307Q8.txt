int graph<vertex,int>::critical_path() { 
	vector<int> vdist;
	vector<int> vlink;
	vdist.assign(V.size(), 0);  
	vlink.assign(V.size(), -1);

	for (int i=0; i<V.size(); i++) {    
		for (int k=0; k<V[i].E.size(); k++) {      
			int j = V[i].E[k];      
			V[i].indegree += 1;    
		}  
	}  
	
	int Nprocessed = 0;  
	stack<int> S;  

	for (int i=0; i<V.size(); i++) {    
		if (V[i].indegree == 0) {      
			S.push(i);      
			vdist[i] = 0;      
			vlink[i] = i;    
		}  
	}
	
	while (!S.empty()) {
		int i=S.top();    
		S.pop();    
		
		Nprocessed++;    
			
		for (int k=0; k<V[i].E.size(); k++) {      
			int j = V[i].E[k];      
			int w = V[i].W[k];      
			if (--V[j].indegree == 0) {       
				S.push(j);      
			}

			if (vdist[j] < vdist[i] + w) {        
				vdist[j] = vdist[i] + w;        
				vlink[j] = i;      
			}    
		}  
	}  

	int w = 0;
	for (int i = 0; i <(int)V.size(); i++) {
		if (w < i) {
			w = i;
		}
	}

	int sink = 0;
	int max_dist = vdist[0];

	for (int i = 1; i <(int)V.size(); i++) {
		if (max_dist < vdist[i]) {
			max_dist = vdist[i];
		}
	}

	return max_dist;
}